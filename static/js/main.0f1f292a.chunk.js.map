{"version":3,"sources":["Products/Product.js","Products/Cart.js","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Product","Addtocart","useState","data","setData","getdata","a","fetch","response","json","useEffect","className","map","curElem","title","price","src","image","alt","onClick","Cart","cart","setCart","datatoremove","filter","reduce","sum","PAGE_DATA","PAGE_CART","Card","page","setpage","navigatorTo","nextPage","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA0CeA,MAxCf,YAA+B,IAAbC,EAAY,EAAZA,UACd,EAAoBC,mBAAS,IAA7B,mBAAMC,EAAN,KAAWC,EAAX,KACMC,EAAO,uCAAC,4BAAAC,EAAA,sEACWC,MAAM,qCADjB,cACJC,EADI,YAEVJ,EAFU,SAEII,EAASC,OAFb,6EAAD,qDAQb,OAJAC,qBAAU,WACVL,MACE,IAGE,qCACA,oBAAIM,UAAU,UAAd,sBAEA,qBAAMA,UAAU,YAAhB,SAGIR,EAAKS,KAAI,SAACC,GACN,OACI,sBAAKF,UAAU,aAAf,UACA,sBAAKA,UAAU,WAAf,UACA,6BAAKE,EAAQC,QACb,+BAAI,sCAAiBD,EAAQE,YAE7B,qBAAKJ,UAAU,aAAf,SACA,qBAAKK,IAAKH,EAAQI,MAAOC,IAAI,kBAE7B,qBAAKP,UAAU,cAAf,SACA,wBAAQQ,QAAS,kBAAIlB,EAAUY,IAA/B,uCCqBLO,MAjDf,YAA+B,IAAhBC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,QAWhB,OACI,qCACA,oBAAIX,UAAU,OAAd,kBACA,qBAAKA,UAAU,aAAf,SACA,wBAAQQ,QAXI,WACZG,EAAQ,KAUR,0BAEA,qBAAMX,UAAU,YAAhB,SAGIU,EAAKT,KAAI,SAACC,GACN,OAEI,sBAAKF,UAAU,aAAf,UACA,sBAAKA,UAAU,WAAf,UACA,6BAAKE,EAAQC,QACb,mCAAMD,EAAQE,YAEd,qBAAKJ,UAAU,aAAf,SACA,qBAAKK,IAAKH,EAAQI,MAAOC,IAAI,kBAE7B,qBAAKP,UAAU,cAAf,SACA,wBAASQ,QAAS,kBAzBhBI,EAyB+BV,OAxB7CS,EAAQD,EAAKG,QAAO,SAACrB,GAAD,OAAQA,IAAOoB,MADtB,IAACA,GAyBF,8BAQZ,uBACA,8BACI,qBAAIZ,UAAU,OAAd,wBAAgC,qCAxC7BU,EAAKI,QAAO,SAACC,EAAD,UAAeA,EAAf,EAAMX,QAAmB,YCD9CY,EAAU,OACVC,EAAU,OAiGDC,EAhGJ,WAEP,MAAoB3B,mBAAS,IAA7B,mBAAMmB,EAAN,KAAWC,EAAX,KACA,EAAoBpB,mBAASyB,GAA7B,mBAAMG,EAAN,KAAWC,EAAX,KAoBMC,EAAY,SAACC,GACfF,EAAQE,IA4DZ,OACI,qCACA,mCACA,yBAAQd,QAAS,kBAAIa,EAAYJ,IAAYjB,UAAU,cAAvD,yBAAkFU,EAAKa,OAAvF,OACA,wBAAQf,QAAS,kBAAIa,EAAYL,IAAYhB,UAAU,cAAvD,8BAEEmB,IAAOH,GAAa,cAAC,EAAD,CAAS1B,UA9EnB,SAACE,GACbmB,EAAQ,GAAD,mBAAKD,GAAL,gBAAclB,SA8EnB2B,IAAOF,GAAc,cAAC,EAAD,CAAMP,KAAMA,EAAOC,QAASA,QCjF5Ca,MAXf,WACE,OACE,qBAAKxB,UAAU,WAAf,SAEA,cAAC,EAAD,OCIWyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f1f292a.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\nfunction Product({Addtocart}) {\r\n    const[data,setData]=useState([]);\r\n    const getdata=async()=>{\r\n        const response=await fetch(\"https://fakestoreapi.com/products\");\r\n        setData(await response.json());\r\n    }\r\n    useEffect(()=>{\r\n    getdata();\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n        <h1 className='product'>Products</h1>\r\n\r\n        <div  className='grid-card'>\r\n        {\r\n            \r\n            data.map((curElem)=>{\r\n                return(\r\n                    <div className='whole-card'>\r\n                    <div className='det-card'>\r\n                    <h2>{curElem.title}</h2>\r\n                    <h2><span >$ </span>{curElem.price}</h2>\r\n                    </div>\r\n                    <div className='image-card'>\r\n                    <img src={curElem.image} alt=\"Loading....\"/>\r\n                    </div>\r\n                    <div className='button-card'>\r\n                    <button onClick={()=>Addtocart(curElem)}>Add To Cart</button>\r\n                   </div>\r\n                    </div>\r\n                )\r\n            })\r\n        \r\n        }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\n\r\nfunction Cart({cart,setCart}) {\r\n    const  gettotalsum=()=>{\r\n        return cart.reduce((sum,{price})=>sum+price,0);\r\n    }\r\n    const clearcart=()=>{\r\n        setCart([]);\r\n    }\r\n    const removecart=(datatoremove)=>{\r\n        setCart(cart.filter((data)=>data!==datatoremove))\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <h1 className='cart'>Cart</h1>\r\n        <div className='clear-cart' >\r\n        <button onClick={clearcart}>Clear Cart</button>\r\n        </div>\r\n        <div  className='grid-card'>\r\n        {\r\n            \r\n            cart.map((curElem)=>{\r\n                return(\r\n                    \r\n                    <div className='whole-card'>\r\n                    <div className='det-card'>\r\n                    <h2>{curElem.title}</h2>\r\n                    <h3>${curElem.price}</h3>\r\n                    </div>\r\n                    <div className='image-card'>\r\n                    <img src={curElem.image} alt=\"Loading....\"/>\r\n                    </div>\r\n                    <div className='button-card'>\r\n                    <button  onClick={()=>removecart(curElem)}>Remove</button>\r\n                    </div>\r\n                    </div>\r\n                )\r\n            })\r\n        \r\n        }\r\n        </div>\r\n        <hr></hr>\r\n        <div>\r\n            <h2 className='cost'>Total Cost:<span>$</span>{gettotalsum()}</h2>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React ,{useState}from 'react'\r\nimport Product from '../Products/Product'\r\nimport Cart from '../Products/Cart'\r\nconst PAGE_DATA='data';\r\nconst PAGE_CART='cart';\r\nconst Card=()=>{\r\n    // const[data,setData]=useState([]);\r\n    const[cart,setCart]=useState([]);\r\n    const[page,setpage]=useState(PAGE_DATA);\r\n\r\n    // const getdata=async()=>{\r\n    //     const response=await fetch(\"https://fakestoreapi.com/products\");\r\n    //     setData(await response.json());\r\n    // }\r\n    // useEffect(()=>{\r\n    // getdata();\r\n    // },[]);\r\n    const Addtocart=(data)=>{\r\n        setCart([...cart,{...data}])\r\n\r\n    }\r\n    // const clearcart=()=>{\r\n    //     setCart([]);\r\n    // }\r\n    // const removecart=(datatoremove)=>{\r\n    //     setCart(cart.filter((data)=>data!==datatoremove))\r\n\r\n    // }\r\n    const navigatorTo=(nextPage)=>{\r\n        setpage(nextPage)\r\n    }\r\n    // const Renderdata=()=>(\r\n    //     <>\r\n    //     <div  className='grid-card'>\r\n    //     {\r\n            \r\n    //         data.map((curElem)=>{\r\n    //             return(\r\n    //                 <div className='whole-card'>\r\n    //                 <div className='det-card'>\r\n    //                 <h2>{curElem.title}</h2>\r\n    //                 <h3>${curElem.price}</h3>\r\n    //                 </div>\r\n    //                 <div className='image-card'>\r\n    //                 <img src={curElem.image} alt=\"Loading....\"/>\r\n    //                 </div>\r\n    //                 <div className='button-card'>\r\n    //                 <button onClick={()=>Addtocart(curElem)}>Add To Cart</button>\r\n    //                 </div>\r\n    //                 </div>\r\n    //             )\r\n    //         })\r\n        \r\n    //     }\r\n    //     </div>\r\n    //     </>\r\n\r\n    // )\r\n    // const rendercart=()=>(\r\n    //     <>\r\n    //     <h1>Cart</h1>\r\n    //     <div  className='grid-card'>\r\n    //     {\r\n            \r\n    //         cart.map((curElem)=>{\r\n    //             return(\r\n                    \r\n    //                 <div className='whole-card'>\r\n    //                 <div className='det-card'>\r\n    //                 <h2>{curElem.title}</h2>\r\n    //                 <h3>${curElem.price}</h3>\r\n    //                 </div>\r\n    //                 <div className='image-card'>\r\n    //                 <img src={curElem.image} alt=\"Loading....\"/>\r\n    //                 </div>\r\n    //                 <div className='button-card'>\r\n    //                 <button onClick={()=>removecart(curElem)}>Remove</button>\r\n    //                 </div>\r\n    //                 </div>\r\n    //             )\r\n    //         })\r\n        \r\n    //     }\r\n    //     </div>\r\n\r\n    //     </>\r\n    // )\r\n\r\n\r\n    return (\r\n        <>\r\n        <header>\r\n        <button onClick={()=>navigatorTo(PAGE_CART)} className='Cart-button'>Go to Card ({cart.length})</button>\r\n        <button onClick={()=>navigatorTo(PAGE_DATA)} className='Cart-button'>View Products</button>\r\n        </header>\r\n         {page===PAGE_DATA &&(<Product Addtocart={Addtocart}/>)}\r\n         {page===PAGE_CART && (<Cart cart={cart}  setCart={setCart}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","\nimport './App.css';\nimport Card from './components/Card';\n\nfunction App() {\n  return (\n    <div className=\"cart-App\">\n    \n    <Card/>\n   \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}